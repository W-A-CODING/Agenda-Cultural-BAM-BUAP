# Generated by Django 5.2.1 on 2025-06-14 08:15

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Disciplina',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(choices=[('musica', 'Música'), ('teatro', 'Teatro'), ('danza', 'Danza'), ('cine', 'Cine'), ('literatura', 'Literatura'), ('artes_visuales', 'Artes Visuales'), ('fotografia', 'Fotografía'), ('escultura', 'Escultura'), ('otros', 'Otros')], max_length=50, unique=True)),
                ('descripcion', models.TextField(blank=True)),
            ],
            options={
                'verbose_name': 'Disciplina Artística',
                'verbose_name_plural': 'Disciplinas Artísticas',
                'db_table': 'disciplinas',
            },
        ),
        migrations.CreateModel(
            name='Usuario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('tipo_usuario', models.CharField(choices=[('administrador', 'Administrador'), ('difusor', 'Difusor'), ('estudiante', 'Estudiante'), ('general', 'General')], default='general', max_length=20)),
                ('recibir_novedades', models.BooleanField(default=False)),
                ('fecha_registro', models.DateTimeField(auto_now_add=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Usuario',
                'verbose_name_plural': 'Usuarios',
                'db_table': 'usuarios',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='PerfilDifusor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo_difusor', models.CharField(choices=[('lugar', 'Lugar Cultural'), ('artista', 'Artista'), ('organizacion', 'Organización')], max_length=20)),
                ('nombre_entidad', models.CharField(max_length=200)),
                ('descripcion', models.TextField()),
                ('imagen_perfil', models.ImageField(blank=True, null=True, upload_to='perfiles/')),
                ('telefono', models.CharField(max_length=20)),
                ('direccion', models.TextField(blank=True, null=True)),
                ('sitio_web', models.URLField(blank=True, null=True)),
                ('redes_sociales', models.JSONField(blank=True, default=dict)),
                ('activo', models.BooleanField(default=True)),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True)),
                ('disciplinas', models.ManyToManyField(related_name='difusores', to='core.disciplina')),
                ('usuario', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='perfil_difusor', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Perfil de Difusor',
                'verbose_name_plural': 'Perfiles de Difusor',
                'db_table': 'perfiles_difusor',
            },
        ),
        migrations.CreateModel(
            name='Evento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titulo', models.CharField(max_length=200)),
                ('descripcion', models.TextField()),
                ('imagen', models.ImageField(upload_to='eventos/')),
                ('clasificacion_edad', models.CharField(choices=[('todo_publico', 'Todo Público'), ('infantil', 'Infantil'), ('adolescentes', 'Adolescentes'), ('adultos', 'Adultos'), ('mayores', 'Adultos Mayores')], max_length=20)),
                ('fecha_evento', models.DateTimeField()),
                ('lugar', models.CharField(max_length=300)),
                ('horario', models.CharField(max_length=100)),
                ('precio', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('es_gratuito', models.BooleanField(default=False)),
                ('aprobado', models.BooleanField(default=False)),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True)),
                ('fecha_actualizacion', models.DateTimeField(auto_now=True)),
                ('disciplina', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.disciplina')),
                ('difusor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='eventos', to='core.perfildifusor')),
            ],
            options={
                'verbose_name': 'Evento',
                'verbose_name_plural': 'Eventos',
                'db_table': 'eventos',
                'ordering': ['fecha_evento'],
            },
        ),
        migrations.CreateModel(
            name='PreferenciasUsuario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('clasificaciones_edad', models.JSONField(default=list)),
                ('ubicacion_lat', models.FloatField(blank=True, null=True)),
                ('ubicacion_lon', models.FloatField(blank=True, null=True)),
                ('disciplinas_interes', models.ManyToManyField(related_name='usuarios_interesados', to='core.disciplina')),
                ('usuario', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='preferencias', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Preferencias de Usuario',
                'verbose_name_plural': 'Preferencias de Usuarios',
                'db_table': 'preferencias_usuario',
            },
        ),
        migrations.CreateModel(
            name='Publicacion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titulo', models.CharField(max_length=200)),
                ('descripcion', models.TextField()),
                ('imagen', models.ImageField(upload_to='publicaciones/')),
                ('clasificacion_edad', models.CharField(choices=[('todo_publico', 'Todo Público'), ('infantil', 'Infantil'), ('adolescentes', 'Adolescentes'), ('adultos', 'Adultos'), ('mayores', 'Adultos Mayores')], max_length=20)),
                ('link', models.URLField(blank=True, null=True)),
                ('fecha_publicacion', models.DateTimeField(default=django.utils.timezone.now)),
                ('aprobado', models.BooleanField(default=False)),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True)),
                ('fecha_actualizacion', models.DateTimeField(auto_now=True)),
                ('difusor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='publicaciones', to='core.perfildifusor')),
                ('disciplina', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.disciplina')),
            ],
            options={
                'verbose_name': 'Publicación',
                'verbose_name_plural': 'Publicaciones',
                'db_table': 'publicaciones',
                'ordering': ['-fecha_publicacion'],
            },
        ),
        migrations.CreateModel(
            name='NotificacionEnviada',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo_notificacion', models.CharField(max_length=50)),
                ('fecha_envio', models.DateTimeField(auto_now_add=True)),
                ('enviado', models.BooleanField(default=False)),
                ('evento', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.evento')),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notificaciones', to=settings.AUTH_USER_MODEL)),
                ('publicacion', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.publicacion')),
            ],
            options={
                'verbose_name': 'Notificación Enviada',
                'verbose_name_plural': 'Notificaciones Enviadas',
                'db_table': 'notificaciones_enviadas',
            },
        ),
        migrations.CreateModel(
            name='SolicitudDifusor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo_difusor', models.CharField(choices=[('lugar', 'Lugar Cultural'), ('artista', 'Artista'), ('organizacion', 'Organización')], max_length=20)),
                ('nombre_entidad', models.CharField(max_length=200)),
                ('descripcion', models.TextField()),
                ('telefono', models.CharField(max_length=20)),
                ('direccion', models.TextField(blank=True, null=True)),
                ('sitio_web', models.URLField(blank=True, null=True)),
                ('redes_sociales', models.JSONField(blank=True, default=dict)),
                ('estado', models.CharField(choices=[('pendiente', 'Pendiente'), ('aprobada', 'Aprobada'), ('rechazada', 'Rechazada')], default='pendiente', max_length=20)),
                ('fecha_solicitud', models.DateTimeField(auto_now_add=True)),
                ('fecha_respuesta', models.DateTimeField(blank=True, null=True)),
                ('comentarios_admin', models.TextField(blank=True, null=True)),
                ('usuario', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='solicitud_difusor', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Solicitud de Difusor',
                'verbose_name_plural': 'Solicitudes de Difusor',
                'db_table': 'solicitudes_difusor',
            },
        ),
        migrations.CreateModel(
            name='Gusto',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha_gusto', models.DateTimeField(auto_now_add=True)),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='gustos', to=settings.AUTH_USER_MODEL)),
                ('artista', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='seguidores', to='core.perfildifusor')),
            ],
            options={
                'verbose_name': 'Gusto',
                'verbose_name_plural': 'Gustos',
                'db_table': 'gustos',
                'unique_together': {('usuario', 'artista')},
            },
        ),
        migrations.CreateModel(
            name='Suscripcion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha_suscripcion', models.DateTimeField(auto_now_add=True)),
                ('difusor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='suscriptores', to='core.perfildifusor')),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='suscripciones', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Suscripción',
                'verbose_name_plural': 'Suscripciones',
                'db_table': 'suscripciones',
                'unique_together': {('usuario', 'difusor')},
            },
        ),
    ]
